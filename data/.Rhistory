zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
n = 100
sd = 100
vs = rnorm(n,mean=0,sd=sd)
ehsd = sqrt(mean((vs-mean(vs))**2))
samples = numeric(100)
for(a in 1:length(samples)){
vs = rnorm(n,mean=0,sd=sd)
#ehsd = sqrt(mean((vs-mean(vs))**2))
ehsd = sd(vs)
samples[a] = ehsd
}
zv = 1.96
c(mean(samples)-zv*sd(samples),mean(samples+zv*(sd(samples))))
mean(100-samples)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
sqrt(sqrt(pop))
sqrt(pop)
1/sqrt(pop)
c(1:17)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
sample(ind,prob = prob)
prob<-1/sqrt(pop)
sample(ind,prob = prob)
sample(1,ind,prob = prob)
sample(ind,1,prob = prob)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
prob<-1/sqrt(pop)
set.seed(111222333)
sample(ind,1,prob = prob)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
prob<-1/sqrt(pop)
set.seed(111222333)
sample(ind,1,prob = prob)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
prob<-1/sqrt(pop)
set.seed(111222333)
sample(ind,1,prob = prob)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
prob<-1/sqrt(pop)
set.seed(111222333)
sample(ind,1,prob = prob)
pop <- c(21.8,17,15.61,14.63,11.52,8.7,8.14,7.59,6.78,6.68,5.6,5.21,4.32,3.78,3.13,2.87,2.65,2.62,2.41,2.04,2,2.09,1.92,1.82,2.12,1.78,1.75,1.74,1.41,1.59)
ind <-c(1:length(pop))
prob<-1/sqrt(pop)
set.seed(111222333)
sample(ind,1,prob = prob)
set.seed(11122233)
sample(ind,1,prob = prob)
library(stringi)
hdf <- read.delim("test/hdf_a.csv",stringsAsFactors = FALSE,header = TRUE,sep = ",", fileEncoding="UTF8")
setwd("~/Documents/Projects/JWCL/data")
hdf <- read.delim("test/hdf_a.csv",stringsAsFactors = FALSE,header = TRUE,sep = ",", fileEncoding="UTF8")
hdf <- read.table("test/hdf_a.csv",stringsAsFactors = FALSE,header = TRUE,sep = ",", fileEncoding="UTF8")
bbdf <- read.csv("baby-names-by-state.csv")
View(bbdf)
bbdf$year - min(bbdf$year)
View(bbdf)
unique(bbdf$year - min(bbdf$year))
plot(unique(bbdf$year - min(bbdf$year)))
plot(unique(bbdf$year - min(bbdf$year))^2)
plot(unique(bbdf$year - min(bbdf$year))^3)
year_prop = unique(bbdf$year - min(bbdf$year))^3
year_prop = year_prop/sum(year_prop)
plot(year_prop)
sample(4,unique(bbdf$year),prob = year_prop)
sample(unique(bbdf$year),4,prob = year_prop)
sample(unique(bbdf$year),4,prob = year_prop,replace = TRUE)
sample(unique(bbdf$year),100000,prob = year_prop,replace = TRUE)
year_prop = unique(bbdf$year - min(bbdf$year))^2
year_prop = year_prop/sum(year_prop)
sample(unique(bbdf$year),100000,prob = year_prop,replace = TRUE)
hist(sample(unique(bbdf$year),100000,prob = year_prop,replace = TRUE))
sample(unique(bbdf$name),100000,prob = year_prop,replace = TRUE)
sample(unique(bbdf$name),100000,replace = TRUE)
birthyear = sample(unique(bbdf$year),100000,prob = year_prop,replace = TRUE)
fn = sample(unique(bbdf$name),100000,replace = TRUE)
ln = sample(unique(bbdf$name),100000,replace = TRUE)
bbdf <- read.csv("baby-names-by-state.csv",stringsAsFactors = FALSE)
year_prop = unique(bbdf$year - min(bbdf$year))^2
year_prop = year_prop/sum(year_prop)
birthyear = sample(unique(bbdf$year),100000,prob = year_prop,replace = TRUE)
fn = sample(unique(bbdf$name),100000,replace = TRUE)
ln = sample(unique(bbdf$name),100000,replace = TRUE)
sample(1:num_people,0.1,replace = FALSE)
num_people = 100000
sample(1:num_people,0.1,replace = FALSE)
sample(1:num_people,0.1*num_people,replace = FALSE)
people_overlap = sample(1:num_people,overlap_prop*num_people,replace = FALSE)
overlap_prop = 0.1
people_overlap = sample(1:num_people,overlap_prop*num_people,replace = FALSE)
1:num_people %in% people_overlap
!1:num_people %in% people_overlap
df1 = data.frame(fn = fn[c(people_overlap,people_d1)],
ln = ln[c(people_overlap,people_d1)],
by = by[c(people_overlap,people_d1)])
df2 = data.frame(fn = fn[c(people_overlap,people_d2)],
ln = ln[c(people_overlap,people_d2)],
by = by[c(people_overlap,people_d2)])
overlap_prop = 0.1
d1_prop = 0.5
num_people = 100000
bbdf <- read.csv("baby-names-by-state.csv",stringsAsFactors = FALSE)
year_prop = unique(bbdf$year - min(bbdf$year))^2
year_prop = year_prop/sum(year_prop)
by = sample(unique(bbdf$year),num_people,prob = year_prop,replace = TRUE)
fn = sample(unique(bbdf$name),num_people,replace = TRUE)
ln = sample(unique(bbdf$name),num_people,replace = TRUE)
people_overlap = sample(1:num_people,overlap_prop*num_people,replace = FALSE)
not_overlap = which(!1:num_people %in% people_overlap,replace = FALSE)
people_d1 = sample(not_overlap,d1_prop*length(not_overlap),replace = FALSE)
people_d2 = which(!not_overlap %in% people_d1)
df1 = data.frame(fn = fn[c(people_overlap,people_d1)],
ln = ln[c(people_overlap,people_d1)],
by = by[c(people_overlap,people_d1)])
df2 = data.frame(fn = fn[c(people_overlap,people_d2)],
ln = ln[c(people_overlap,people_d2)],
by = by[c(people_overlap,people_d2)])
not_overlap = which(!1:num_people %in% people_overlap)
people_d1 = sample(not_overlap,d1_prop*length(not_overlap),replace = FALSE)
people_d2 = which(!not_overlap %in% people_d1)
df1 = data.frame(fn = fn[c(people_overlap,people_d1)],
ln = ln[c(people_overlap,people_d1)],
by = by[c(people_overlap,people_d1)])
df2 = data.frame(fn = fn[c(people_overlap,people_d2)],
ln = ln[c(people_overlap,people_d2)],
by = by[c(people_overlap,people_d2)])
View(df1)
View(df2)
View(df1)
View(df2)
runif(nrow(df1))
st_er1 = 0.1
runif(nrow(df1))>st_er1
runif(nrow(df1))<st_er1
stri_length(df1$fn)
runif(nrow(df1))<st_er1
runif(stri_length(df1$fn))
length(runif(stri_length(df1$fn)))
length(runif(sum(stri_length(df1$fn[er1]))))
er1 = runif(nrow(df1))<st_er1
length(runif(sum(stri_length(df1$fn[er1]))))
er1 = which(runif(nrow(df1))<st_er1)
for(a in er1){
runif(stri_length(df1$fn))
}
sample(c(letters,LETTERS,0:9),1)
rand_se <- function(s){
doer = which(runif(stri_length(df1$fn))<st_er2)
for(a in doer){
substr(s,a,a)<-sample(c(letters,LETTERS,0:9),1)
}
return(s)
}
er1[1]
er1[2]
df1$fn[2]
rand_se(df1$fn[2])
st_er1 = 0.1
st_er2 = 0.05
rand_se(df1$fn[2])
bbdf <- read.csv("baby-names-by-state.csv",stringsAsFactors = FALSE)
year_prop = unique(bbdf$year - min(bbdf$year))^2
year_prop = year_prop/sum(year_prop)
by = sample(unique(bbdf$year),num_people,prob = year_prop,replace = TRUE)
fn = sample(unique(bbdf$name),num_people,replace = TRUE)
ln = sample(unique(bbdf$name),num_people,replace = TRUE)
people_overlap = sample(1:num_people,overlap_prop*num_people,replace = FALSE)
not_overlap = which(!1:num_people %in% people_overlap)
people_d1 = sample(not_overlap,d1_prop*length(not_overlap),replace = FALSE)
people_d2 = which(!not_overlap %in% people_d1)
df1 = data.frame(fn = fn[c(people_overlap,people_d1)],
ln = ln[c(people_overlap,people_d1)],
by = by[c(people_overlap,people_d1)])
df2 = data.frame(fn = fn[c(people_overlap,people_d2)],
ln = ln[c(people_overlap,people_d2)],
by = by[c(people_overlap,people_d2)])
rand_se <- function(s){
doer = which(runif(stri_length(df1$fn))<st_er2)
for(a in doer){
substr(s,a,a)<-sample(c(letters,LETTERS,0:9),1)
}
return(s)
}
rand_se(df1$fn[2])
df1$fn[2]
df1 = data.frame(fn = fn[c(people_overlap,people_d1)],
ln = ln[c(people_overlap,people_d1)],
by = by[c(people_overlap,people_d1)],
stringsAsFactors = FALSE)
df2 = data.frame(fn = fn[c(people_overlap,people_d2)],
ln = ln[c(people_overlap,people_d2)],
by = by[c(people_overlap,people_d2)],
stringsAsFactors = FALSE)
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
st_er2 = 0.1
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
rand_se(df1$fn[2])
sapply(df1$fn[er1],rand_se)
library(stringi)
pat = "[A-Z]"
write.table(data.frame(n=stri_rand_strings(100000,12,pat)),"rnames1.csv",row.names = FALSE,col.names = FALSE)
write.table(data.frame(n=stri_rand_strings(100000,12,pat)),"rnames2.csv",row.names = FALSE,col.names = FALSE)
